{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEB DEV\\\\Tune-master\\\\Tune-master\\\\client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport logo from \"../images/tune.jpg\";\nimport \"./Login.css\";\nimport \"./Signin.css\";\nimport showPassword from \"../images/show-password.svg\";\nimport hidePassword from \"../images/hide-password.svg\";\nimport axios from \"axios\";\nimport axiosbaseurl from \"./axiosbaseurl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [signInMessageBoxContent, setSignInMessageBoxContent] = useState();\n  const [logInMessageBoxContent, setLogInMessageBoxContent] = useState();\n  const [name, setName] = useState();\n  const [email1, setEmail1] = useState();\n  const [pwd1, setPwd1] = useState();\n  const [pwd2, setPwd2] = useState();\n  const [dob, setDob] = useState();\n  const [number, setNumber] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPwd] = useState();\n  const [modal, setModal] = useState(false);\n  const [isRevealPwd, setIsRevealPwd] = useState(false);\n  const history = useHistory();\n  var nameExpression = /^[a-zA-Z]+ [a-zA-Z]+$/;\n  var emailExpression = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  var passwordExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n  var numberExpression = /^[6-9]\\d{9}$/;\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  const makeSignInRequest = () => {\n    var currentTime = new Date();\n    const age = currentTime.getFullYear() - parseInt(dob.substring(0, 4));\n    axiosbaseurl.post(\"signin\", {\n      name: name,\n      email: email1,\n      password: pwd1,\n      dob: dob,\n      phoneNo: number,\n      age: age\n    }).then(res => {\n      if (res.data === \"Added\") {\n        setSignInMessageBoxContent(\"Account created successfully! Please Wait...\");\n        setTimeout(function () {\n          props.getEmail(email1);\n          history.push({\n            pathname: \"/selectpreference\",\n            state: {\n              needsRefresh: true\n            }\n          });\n        }, 3000);\n      } else if (res.data === \"error\") {\n        setSignInMessageBoxContent(\"Error Status: 500\");\n      }\n    });\n  };\n\n  const checkName = () => {\n    if (!nameExpression.test(name)) {\n      setSignInMessageBoxContent(\"Incorrect Name Input\");\n    } else {\n      setSignInMessageBoxContent(\"\");\n    }\n  };\n\n  const checkEmail = () => {\n    if (!emailExpression.test(email1)) {\n      setSignInMessageBoxContent(\"Incorrect Email Input\");\n    } else {\n      setSignInMessageBoxContent(\"\");\n    }\n  };\n\n  const checkPassword1 = () => {\n    if (!passwordExpression.test(pwd1)) {\n      setSignInMessageBoxContent(\"Incorrect Password Input\");\n    } else {\n      setSignInMessageBoxContent(\"\");\n    }\n  };\n\n  const checkPassword2 = () => {\n    if (!passwordExpression.test(pwd2)) {\n      setSignInMessageBoxContent(\"Incorrect Password Input\");\n    } else {\n      setSignInMessageBoxContent(\"\");\n    }\n  };\n\n  const checkPhone = () => {\n    if (!numberExpression.test(number)) {\n      setSignInMessageBoxContent(\"Incorrect phone number Input\");\n    } else {\n      setSignInMessageBoxContent(\"\");\n    }\n  };\n\n  const handleSignIn = e => {\n    e.preventDefault();\n\n    if (pwd1 === pwd2) {\n      if (pwd1.length < 8) {\n        setSignInMessageBoxContent(\"Password  must be atleast 8 characters.\");\n      } else {\n        if (!passwordExpression.test(pwd1)) {\n          setSignInMessageBoxContent(\"Password must have atleast one number and special character.\");\n        } else {\n          makeSignInRequest();\n        }\n      }\n    } else {\n      setSignInMessageBoxContent(\"Passwords does not match.\");\n    }\n  };\n\n  function checkLogin() {\n    axiosbaseurl.post(\"login\", {\n      email: email,\n      password: password\n    }).then(res => {\n      if (res.data === \"Invalid\") {\n        setLogInMessageBoxContent(\"Wrong Email or Password\");\n        props.authentication(false);\n        props.getEmail(undefined);\n        props.getName(\"\");\n        props.getUserId(undefined);\n      } else if (res.data === \"error\") {\n        setLogInMessageBoxContent(\"Something went wrong, please try again\");\n        props.authentication(false);\n        props.getEmail(undefined);\n        props.getName(\"\");\n        props.getUserId(undefined);\n      } else {\n        setLogInMessageBoxContent(\"Logged In Sucessfully!\");\n        props.authentication(true);\n        props.getEmail(res.data[0].email);\n        props.getName(res.data[0].name);\n        props.getUserId(res.data[0].userid);\n        setTimeout(function () {\n          history.push({\n            pathname: \"/\",\n            state: {\n              needsRefresh: true\n            }\n          });\n        }, 1000);\n      }\n    });\n  }\n\n  const handleLogIn = e => {\n    e.preventDefault();\n    checkLogin();\n  };\n\n  const Signin = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"signin\",\n            children: \"Sign-Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"closeModal\",\n            onClick: toggleModal,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSignIn,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nameInput\",\n                className: \"nameLabel\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"nameLabel\",\n                id: \"nameInput\",\n                required: true,\n                onChange: e => {\n                  setName(e.target.value);\n                },\n                onBlur: checkName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"emailInput\",\n                className: \"emailLabel\",\n                children: \"E-mail id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"emailLabel\",\n                id: \"emailInput\",\n                required: true,\n                onChange: e => setEmail1(e.target.value),\n                onBlur: checkEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password1Input\",\n                className: \"password1Label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pwdContainer\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  name: \"password1Label\",\n                  id: \"password1Input\",\n                  type: isRevealPwd ? \"text\" : \"password\",\n                  onChange: e => setPwd1(e.target.value),\n                  onBlur: checkPassword1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"showPassword\",\n                  className: \"pwd-toggle\",\n                  title: isRevealPwd ? \"Hide password\" : \"Show password\",\n                  src: isRevealPwd ? showPassword : hidePassword,\n                  onClick: () => setIsRevealPwd(prevState => !prevState)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password2Input\",\n                className: \"password2Label\",\n                children: \" Re-enter your password \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password2Label\",\n                id: \"password2Input\",\n                required: true,\n                onChange: e => setPwd2(e.target.value),\n                onBlur: checkPassword2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"dobInput\",\n                className: \"dobLabel\",\n                children: \" Date of Birth\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"dobLabel\",\n                id: \"dobInput\",\n                required: true,\n                onChange: e => setDob(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"numberInput\",\n                className: \"numberLabel\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"numberLabel\",\n                id: \"numberInput\",\n                required: true,\n                onChange: e => setNumber(e.target.value),\n                onBlur: checkPhone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"signinButton\",\n                type: \"submit\",\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: signInMessageBoxContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"innerBox\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/explore\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogIn,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          id: \"emailL\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          id: \"passwordL\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pwdContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            name: \"password\",\n            id: \"password\",\n            className: \"passwordInput\",\n            type: isRevealPwd ? \"text\" : \"password\",\n            onChange: e => setPwd(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"showPassword\",\n            className: \"pwd-toggle\",\n            title: isRevealPwd ? \"Hide password\" : \"Show password\",\n            src: isRevealPwd ? showPassword : hidePassword,\n            onClick: () => setIsRevealPwd(prevState => !prevState)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"loginButton\",\n          children: \"Log-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: logInMessageBoxContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"terms\",\n        children: \"By continuing, you agree to T-Une's Conditions of Use and Privacy Notice.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"newAccount\",\n        onClick: toggleModal,\n        children: \"Create new Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), modal && Signin()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"4p+mMbX5zsh0tya+WvgiCDbl4rk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/WEB DEV/Tune-master/Tune-master/client/src/components/Login.js"],"names":["React","useState","Link","useHistory","Redirect","logo","showPassword","hidePassword","axios","axiosbaseurl","Login","props","signInMessageBoxContent","setSignInMessageBoxContent","logInMessageBoxContent","setLogInMessageBoxContent","name","setName","email1","setEmail1","pwd1","setPwd1","pwd2","setPwd2","dob","setDob","number","setNumber","email","setEmail","password","setPwd","modal","setModal","isRevealPwd","setIsRevealPwd","history","nameExpression","emailExpression","passwordExpression","numberExpression","toggleModal","makeSignInRequest","currentTime","Date","age","getFullYear","parseInt","substring","post","phoneNo","then","res","data","setTimeout","getEmail","push","pathname","state","needsRefresh","checkName","test","checkEmail","checkPassword1","checkPassword2","checkPhone","handleSignIn","e","preventDefault","length","checkLogin","authentication","undefined","getName","getUserId","userid","handleLogIn","Signin","target","value","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\nimport logo from \"../images/tune.jpg\";\nimport \"./Login.css\";\nimport \"./Signin.css\";\nimport showPassword from \"../images/show-password.svg\";\nimport hidePassword from \"../images/hide-password.svg\";\nimport axios from \"axios\";\nimport axiosbaseurl from \"./axiosbaseurl\"; \n\nfunction Login(props) {\n\tconst [signInMessageBoxContent, setSignInMessageBoxContent] = useState();\n\tconst [logInMessageBoxContent, setLogInMessageBoxContent] = useState();\n\n\tconst [name, setName] = useState();\n\tconst [email1, setEmail1] = useState();\n\tconst [pwd1, setPwd1] = useState();\n\tconst [pwd2, setPwd2] = useState();\n\tconst [dob, setDob] = useState();\n\tconst [number, setNumber] = useState();\n\n\tconst [email, setEmail] = useState();\n\tconst [password, setPwd] = useState();\n\n\tconst [modal, setModal] = useState(false);\n\tconst [isRevealPwd, setIsRevealPwd] = useState(false);\n\n\tconst history = useHistory();\n\n\tvar nameExpression = /^[a-zA-Z]+ [a-zA-Z]+$/;\n\tvar emailExpression = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\tvar passwordExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n\tvar numberExpression = /^[6-9]\\d{9}$/;\n\n\tconst toggleModal = () => {\n\t\tsetModal(!modal);\n\t};\n\n\tconst makeSignInRequest = () => {\n\t\tvar currentTime = new Date();\n\t\tconst age = currentTime.getFullYear() - parseInt(dob.substring(0, 4));\n\n\t\taxiosbaseurl.post(\"signin\", { name: name, email: email1, password: pwd1, dob: dob, phoneNo: number, age: age, })\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data === \"Added\") {\n\t\t\t\t\tsetSignInMessageBoxContent(\"Account created successfully! Please Wait...\");\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tprops.getEmail(email1);\n\n\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\tpathname: \"/selectpreference\",\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tneedsRefresh: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}, 3000);\n\t\t\t\t}\n\t\t\t\telse if (res.data === \"error\") {\n\t\t\t\t\tsetSignInMessageBoxContent(\"Error Status: 500\");\n\t\t\t\t}\n\t\t\t})\n\t};\n\n\tconst checkName = () => {\n\t\tif (!nameExpression.test(name)) {\n\t\t\tsetSignInMessageBoxContent(\"Incorrect Name Input\");\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"\");\n\t\t}\n\t};\n\n\tconst checkEmail = () => {\n\t\tif (!emailExpression.test(email1)) {\n\t\t\tsetSignInMessageBoxContent(\"Incorrect Email Input\");\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"\");\n\t\t}\n\t};\n\n\tconst checkPassword1 = () => {\n\t\tif (!passwordExpression.test(pwd1)) {\n\t\t\tsetSignInMessageBoxContent(\"Incorrect Password Input\");\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"\");\n\t\t}\n\t};\n\n\tconst checkPassword2 = () => {\n\t\tif (!passwordExpression.test(pwd2)) {\n\t\t\tsetSignInMessageBoxContent(\"Incorrect Password Input\");\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"\");\n\t\t}\n\t};\n\n\tconst checkPhone = () => {\n\t\tif (!numberExpression.test(number)) {\n\t\t\tsetSignInMessageBoxContent(\"Incorrect phone number Input\");\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"\");\n\t\t}\n\t};\n\n\tconst handleSignIn = (e) => {\n\t\te.preventDefault();\n\n\t\tif (pwd1 === pwd2) {\n\t\t\tif (pwd1.length < 8) {\n\t\t\t\tsetSignInMessageBoxContent(\"Password  must be atleast 8 characters.\");\n\t\t\t} else {\n\t\t\t\tif (!passwordExpression.test(pwd1)) {\n\t\t\t\t\tsetSignInMessageBoxContent(\"Password must have atleast one number and special character.\");\n\t\t\t\t} else {\n\t\t\t\t\tmakeSignInRequest();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tsetSignInMessageBoxContent(\"Passwords does not match.\");\n\t\t}\n\t};\n\n\tfunction checkLogin() {\n\n\t\taxiosbaseurl.post(\"login\", { email: email, password: password, })\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data === \"Invalid\") {\n\t\t\t\t\tsetLogInMessageBoxContent(\"Wrong Email or Password\");\n\t\t\t\t\tprops.authentication(false);\n\t\t\t\t\tprops.getEmail(undefined);\n\t\t\t\t\tprops.getName(\"\");\n\t\t\t\t\tprops.getUserId(undefined);\n\t\t\t\t}\n\t\t\t\telse if (res.data === \"error\") {\n\t\t\t\t\tsetLogInMessageBoxContent(\"Something went wrong, please try again\");\n\t\t\t\t\tprops.authentication(false);\n\t\t\t\t\tprops.getEmail(undefined);\n\t\t\t\t\tprops.getName(\"\");\n\t\t\t\t\tprops.getUserId(undefined);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetLogInMessageBoxContent(\"Logged In Sucessfully!\");\n\t\t\t\t\tprops.authentication(true);\n\t\t\t\t\tprops.getEmail(res.data[0].email);\n\t\t\t\t\tprops.getName(res.data[0].name);\n\t\t\t\t\tprops.getUserId(res.data[0].userid);\n\t\t\t\t\tsetTimeout(function () {\n\n\t\t\t\t\t\thistory.push({\n\t\t\t\t\t\t\tpathname: \"/\",\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tneedsRefresh: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}, 1000);\n\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t})\n\t}\n\n\tconst handleLogIn = (e) => {\n\t\te.preventDefault();\n\t\tcheckLogin();\n\t};\n\n\tconst Signin = () => {\n\t\treturn (\n\t\t\t<div className=\"modal\">\n\t\t\t\t<div className=\"overlay\">\n\t\t\t\t\t<div className=\"modalContent\">\n\t\t\t\t\t\t<h1 className=\"signin\">Sign-Up</h1>\n\t\t\t\t\t\t<button className=\"closeModal\" onClick={toggleModal}>\n\t\t\t\t\t\t\tX\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t<form onSubmit={handleSignIn}>\n\t\t\t\t\t\t\t\t<label htmlFor=\"nameInput\" className=\"nameLabel\">\n\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"nameLabel\" id=\"nameInput\" required onChange={(e) => {setName(e.target.value);}} onBlur={checkName} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"emailInput\" className=\"emailLabel\">E-mail id</label>\n\t\t\t\t\t\t\t\t<input type=\"email\" name=\"emailLabel\" id=\"emailInput\" required onChange={(e) => setEmail1(e.target.value)} onBlur={checkEmail} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"password1Input\" className=\"password1Label\">Password</label>\n\t\t\t\t\t\t\t\t<div className=\"pwdContainer\">\n\t\t\t\t\t\t\t\t\t<input required name=\"password1Label\" id=\"password1Input\" type={isRevealPwd ? \"text\" : \"password\"}  onChange={(e) => setPwd1(e.target.value)} onBlur={checkPassword1} />\n\t\t\t\t\t\t\t\t\t<img alt=\"showPassword\" className=\"pwd-toggle\" title={isRevealPwd ? \"Hide password\" : \"Show password\"} src={isRevealPwd ? showPassword : hidePassword} onClick={() => setIsRevealPwd((prevState) => !prevState)} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<label htmlFor=\"password2Input\" className=\"password2Label\"> Re-enter your password </label>\n\t\t\t\t\t\t\t\t<input type=\"password\" name=\"password2Label\" id=\"password2Input\" required onChange={(e) => setPwd2(e.target.value)} onBlur={checkPassword2} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"dobInput\" className=\"dobLabel\"> Date of Birth</label>\n\t\t\t\t\t\t\t\t<input type=\"date\" name=\"dobLabel\" id=\"dobInput\" required onChange={(e) => setDob(e.target.value)} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"numberInput\" className=\"numberLabel\">Phone Number</label>\n\t\t\t\t\t\t\t\t<input type=\"tel\" name=\"numberLabel\" id=\"numberInput\" required onChange={(e) => setNumber(e.target.value)} onBlur={checkPhone} />\n\t\t\t\t\t\t\t\t<button id=\"signinButton\" type=\"submit\">Sign In</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t<div className=\"message\">{signInMessageBoxContent}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"innerBox\">\n\t\t\t\t<Link to=\"/explore\">\n\t\t\t\t\t<img src={logo} alt=\"logo\" className=\"logo\" />\n\t\t\t\t</Link>\n\t\t\t\t<h1>Login</h1>\n\t\t\t\t<form onSubmit={handleLogIn}>\n\t\t\t\t\t<label htmlFor=\"email\" id=\"emailL\">E-mail</label>\n\t\t\t\t\t<input required type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)} />\n\t\t\t\t\t<label htmlFor=\"password\" id=\"passwordL\">Password</label>\n\t\t\t\t\t<div className=\"pwdContainer\">\n\t\t\t\t\t\t<input required name=\"password\" id=\"password\" className=\"passwordInput\" type={isRevealPwd ? \"text\" : \"password\"} onChange={(e) => setPwd(e.target.value)} />\n\t\t\t\t\t\t<img alt=\"showPassword\" className=\"pwd-toggle\" title={isRevealPwd ? \"Hide password\" : \"Show password\"} src={isRevealPwd ? showPassword : hidePassword} onClick={() => setIsRevealPwd((prevState) => !prevState)} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"submit\" id=\"loginButton\">Log-in</button>\n\t\t\t\t</form>\n\n\t\t\t\t<div className=\"message\">{logInMessageBoxContent}</div>\n\n\t\t\t\t<p className=\"terms\">\n\t\t\t\t\tBy continuing, you agree to T-Une's Conditions of Use and Privacy\n\t\t\t\t\tNotice.\n\t\t\t\t</p>\n\t\t\t\t<p className=\"newAccount\" onClick={toggleModal}>Create new Account</p>\n\t\t\t</div>\n\n\t\t\t{modal && Signin()}\n\t\t</div>\n\t);\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}